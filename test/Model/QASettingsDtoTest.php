<?php
/**
 * QASettingsDtoTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Memsource
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Memsource REST API
 *
 * Welcome to Memsource's API documentation. To view our legacy APIs please [visit our documentation](https://wiki.memsource.com/wiki/Memsource_API) and for more information about our new APIs, [visit our blog](https://www.memsource.com/blog/2017/10/24/introducing-rest-apis-qa-with-the-memsource-api-team/).    If you have any questions, please contact [Memsource Support](<mailto:support@memsource.com>).
 *
 * OpenAPI spec version: All
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Memsource;

/**
 * QASettingsDtoTest Class Doc Comment
 *
 * @category    Class */
// * @description QASettingsDto
/**
 * @package     Memsource
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class QASettingsDtoTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "QASettingsDto"
     */
    public function testQASettingsDto()
    {
    }

    /**
     * Test attribute "emptyTranslation"
     */
    public function testPropertyEmptyTranslation()
    {
    }

    /**
     * Test attribute "inconsistentTranslation"
     */
    public function testPropertyInconsistentTranslation()
    {
    }

    /**
     * Test attribute "joinTags"
     */
    public function testPropertyJoinTags()
    {
    }

    /**
     * Test attribute "missingNumbers"
     */
    public function testPropertyMissingNumbers()
    {
    }

    /**
     * Test attribute "segmentNotConfirmed"
     */
    public function testPropertySegmentNotConfirmed()
    {
    }

    /**
     * Test attribute "terminology"
     */
    public function testPropertyTerminology()
    {
    }

    /**
     * Test attribute "multipleSpaces"
     */
    public function testPropertyMultipleSpaces()
    {
    }

    /**
     * Test attribute "trailingSpace"
     */
    public function testPropertyTrailingSpace()
    {
    }

    /**
     * Test attribute "trailingPunctuation"
     */
    public function testPropertyTrailingPunctuation()
    {
    }

    /**
     * Test attribute "targetLength"
     */
    public function testPropertyTargetLength()
    {
    }

    /**
     * Test attribute "formatting"
     */
    public function testPropertyFormatting()
    {
    }

    /**
     * Test attribute "unresolvedComment"
     */
    public function testPropertyUnresolvedComment()
    {
    }

    /**
     * Test attribute "emptyPairTags"
     */
    public function testPropertyEmptyPairTags()
    {
    }

    /**
     * Test attribute "strictJobStatus"
     */
    public function testPropertyStrictJobStatus()
    {
    }

    /**
     * Test attribute "forbiddenStrings"
     */
    public function testPropertyForbiddenStrings()
    {
    }

    /**
     * Test attribute "excludeLockedSegments"
     */
    public function testPropertyExcludeLockedSegments()
    {
    }

    /**
     * Test attribute "ignoreNotApprovedTerms"
     */
    public function testPropertyIgnoreNotApprovedTerms()
    {
    }

    /**
     * Test attribute "spellCheck"
     */
    public function testPropertySpellCheck()
    {
    }

    /**
     * Test attribute "repeatedWords"
     */
    public function testPropertyRepeatedWords()
    {
    }

    /**
     * Test attribute "inconsistentTagContent"
     */
    public function testPropertyInconsistentTagContent()
    {
    }

    /**
     * Test attribute "emptyTagContent"
     */
    public function testPropertyEmptyTagContent()
    {
    }

    /**
     * Test attribute "xliffTags"
     */
    public function testPropertyXliffTags()
    {
    }

    /**
     * Test attribute "nestedTags"
     */
    public function testPropertyNestedTags()
    {
    }

    /**
     * Test attribute "forbiddenTerms"
     */
    public function testPropertyForbiddenTerms()
    {
    }

    /**
     * Test attribute "targetLengthPercent"
     */
    public function testPropertyTargetLengthPercent()
    {
    }

    /**
     * Test attribute "targetLengthPerSegment"
     */
    public function testPropertyTargetLengthPerSegment()
    {
    }

    /**
     * Test attribute "newerAtPrecedingWorkflowStep"
     */
    public function testPropertyNewerAtPrecedingWorkflowStep()
    {
    }

    /**
     * Test attribute "leadingAndTrailingSpaces"
     */
    public function testPropertyLeadingAndTrailingSpaces()
    {
    }

    /**
     * Test attribute "ignoreInAllWorkflowSteps"
     */
    public function testPropertyIgnoreInAllWorkflowSteps()
    {
    }

    /**
     * Test attribute "unmodifiedFuzzyTranslation"
     */
    public function testPropertyUnmodifiedFuzzyTranslation()
    {
    }

    /**
     * Test attribute "regexp"
     */
    public function testPropertyRegexp()
    {
    }

    /**
     * Test attribute "extraNumbers"
     */
    public function testPropertyExtraNumbers()
    {
    }

    /**
     * Test attribute "targetSourceIdentical"
     */
    public function testPropertyTargetSourceIdentical()
    {
    }

    /**
     * Test attribute "moravia"
     */
    public function testPropertyMoravia()
    {
    }
}
